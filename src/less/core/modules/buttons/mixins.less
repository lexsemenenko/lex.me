// Changelog:       V1.0.1 = Added extra parameters to the button colors mixin,
//                    Added btn-full class. 
//                  V1.0.2 = Added extra parameters to the button colors mixin,
//                    Added btn-full class. 
//                  V1.0.3 = Removed the word - "framework" from the button mixins 
//                    names. When updating old websites, make sure to update the 
//                    names in the buttons-config.less and 
//                    drupal-theme-config.less files.
//                  V1.0.4 = Added Button Group Stacked Horizontally
//                  V1.0.5 = Fixed the ability to override the hover colors for mix-btn and mix-btn-color


// Contents:        - Mixins
//                    - Mixin Main
//                    - Mixin Gradient
//                    - Mixin Colors
//                    - Mixin Size
//                    - Mixin Icon Only
//                  - Special Classes
//                    - Disabled
//                    - Transparent
//                    - Full width
//                    - Button is inside wrapper
//                    - Button Groups





// Mixins
// =============================================================================

// Utility Mixins (used in mixins)
// =====================================

.mix-btn--defaults() {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  display: inline-block;
  text-align: center;
  vertical-align: middle;
  border-style: solid;
}


.mix-btn(@height,
@bg-color,
@font-color: white,
@brd-radius: 0,
@brd-size: 0,
@brd-color: transparent,
@font-size: inherit,
@hover--font-color: @font-color,
@hover--bg-color: darken(@bg-color, @btn-hover-bg-amount),
@hover--brd-color: darken(@brd-color, @btn-hover-brd-amount)) {

  .mix-btn--defaults();
  .mix-text(@font-size);
  .mix-border-radius(@brd-radius);
  padding: @height @height*@btn-proportion;
  color: @font-color;
  line-height: @btn-lh;
  letter-spacing: @btn-letter-spacing;
  border-width: @brd-size;
  border-color: @brd-color;
  background-color: @bg-color;

  & when not (@btn-gradient =off) {
    .mix-gradient-v(lighten(@bg-color, @btn-gradient-amount), darken(@bg-color, @btn-gradient-amount));
  }

  // If using in WYSIWYG area where links have both visited and hover states.
  &:visited {
    background-color: @bg-color;
    color: @font-color;
    border-color: @brd-color;

    & when not (@btn-gradient =off) {
      .mix-gradient-v(lighten(@bg-color, @btn-gradient-amount), darken(@bg-color, @btn-gradient-amount));
    }
  }

  &:hover {
    background-color: @hover--bg-color;
    color: @hover--font-color;
    border-color: @hover--brd-color;

    & when not (@btn-gradient =off) {
      .mix-gradient-v(lighten(@hover--bg-color, @btn-gradient-amount), darken(@hover--bg-color, @btn-gradient-amount));
    }
  }

  .hook--mix-btn();
}



// Mixin Colors
// =============================================================================

// Solid color button
// =====================================

.mix-btn-color(@class-name,
@bg-color,
@font-color: white,
@brd-color: transparent,
@btn-gradient: @btn-gradient,
@brd-width: @btn-brd-width,
@hover--font-color: @font-color,
@hover--brd-color: darken(@brd-color, @btn-hover-brd-amount),
@hover--bg-color: darken(@bg-color, @btn-hover-bg-amount)) when (@btn-gradient =off) {
  .btn-@{class-name} {
    background-color: @bg-color;
    border-color: @brd-color;
    border-width: @brd-width;
    color: @font-color;

    & when not (@btn-gradient =off) {
      .mix-gradient-v(lighten(@bg-color, @btn-gradient-amount), darken(@bg-color, @btn-gradient-amount));
    }

    &:visited {
      background-color: @bg-color;
      color: @font-color;
      border-color: @brd-color;

      & when not (@btn-gradient =off) {
        .mix-gradient-v(lighten(@bg-color, @btn-gradient-amount), darken(@bg-color, @btn-gradient-amount));
      }
    }

    &:hover {
      background-color: @hover--bg-color;
      color: @hover--font-color;
      border-color: @hover--brd-color;

      & when not (@btn-gradient =off) {
        .mix-gradient-v(lighten(@hover--bg-color, @btn-gradient-amount), darken(@hover--bg-color, @btn-gradient-amount));
      }
    }
  }
}

// Mixin Size
// =============================================================================

.mix-btn-size(@class-name,
@height,
@font-size,
@proportion: @btn-proportion ) {
  .btn-@{class-name} {
    .mix-text(@font-size);
    padding: @height @height*@proportion;
  }
}

// Mixin Icon Only
// =============================================================================

.mix-btn-icon-only(@class-name, @height, @font-size) {
  .i-@{class-name} {
    // .hide-text; [CHECK]
    height: @height;
    width: @height;
    position: relative;
    padding: 0;
    display: inline-block;

    &:before {
      .i-defaults;
      line-height: @height;
      text-indent: 0;
      white-space: normal;
      // .mix-text(@font-size); [CHECK]
      display: block;
      position: absolute;
      text-align: center;
      vertical-align: middle;
      width: 100%;
      height: 100%;
      top: 2px; // Nudge
    }
  }
}

// =============================================================================
// Special Classes
// =============================================================================

// Disabled
// =============================================================================
.btn-disabled {
  cursor: default;
  .hook--btn-disabled();

  &:hover,
  &:visited {
    background-color: @btn-bg;
    border-color: @btn-brd-color;
  }
}

// Transparent
// =============================================================================
.btn-clear {
  background-color: transparent;
  background-image: none;
  border-width: 0;
  color: @a-color;
  .mix-shadow-none();

  &:hover,
  &:visited {
    background-color: transparent;
    background-image: none;
    border-width: 0;
    .mix-shadow-none();
  }

  &:visited {
    color: @a-color;
  }

  &:hover {
    color: @a-color-hover;
  }
}

// Full width
// =============================================================================
.btn-full {
  width: 100%;
  display: block;
  padding-left: 0;
  padding-right: 0;
}

// Button is inside wrapper
// =============================================================================
.btn-inside {
  &:extend(.btn all);
  padding: 0;

  input,
  a,
  button {
    display: block;
    padding: @btn-height @btn-height*@btn-proportion;
  }

  .hook--btn-inside();
}


// Button Groups
// =============================================================================

// Stacked Horizontally
// =====================================

.btn-group-h {
  // Behave like buttons
  display: inline-block;
  vertical-align: middle;
  // Remove whitespace between child elements when using `inline-block`
  font-size: 0.001px;
  // Prevent buttons from wrapping
  white-space: nowrap;

  >.btn {
    &:hover {
      position: relative;
      z-index: 2;
    }

    &:first-child {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    &:last-child {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }

    &:not(:first-child):not(:last-child) {
      border-radius: 0;
    }

    &:nth-child(n+2) {
      margin-left: -@btn-brd-width;
    }
  }
}

// Stacked Vertically 
// =====================================

.btn-group-v {
  >.btn {
    display: block;
    margin-top: -1px;

    &:first-child {
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
    }

    &:last-child {
      border-top-left-radius: 0;
      border-top-right-radius: 0;
    }

    &:not(:first-child):not(:last-child) {
      border-radius: 0;
    }

    &:hover {
      z-index: 2;
      position: relative;
    }
  }
}